//State variables
int motorState;
int switchState;
int motionState;
int dimPercentLight;
int dimPercentLED;
int zeroCrossState;

//Pins
int LEDSTRIP = A0;
int ZEROCROSS = D1;
int MOTION = D0;
int MOTOR = D2;
int HVDIM = A1;
int SWITCH = D3;

String timeServer = "http://www.timeapi.org/";

String getValue(String data, char separator, int index) {
  int found = 0;
  int strIndex[] = {0, -1};
  int maxIndex = data.length()-1;

  for(int i=0; i<=maxIndex && found<=index; i++){
    if(data.charAt(i)==separator || i==maxIndex){
        found++;
        strIndex[0] = strIndex[1]+1;
        strIndex[1] = (i == maxIndex) ? i+1 : i;
    }
  }

  return found>index ? data.substring(strIndex[0], strIndex[1]) : "";
}

int[] getTime() {
  String timeString = client.read("GET utc/now?\H:\M:\S");
  String
}

void motorOn() {
  digitalWrite(MOTOR, HIGH);
  delay(5000);
  digitalWrite(MOTOR, LOW);
  
  if (motorState == false) {
    motorState = true;
  } else {
    motorState = false;
  }

}

void fade(String command){
    String percent = getValue(command, ',', 0);
    String fadeTime = getValue(command, ',', 1);
    String id = getValue(command, ',', 2);
    Serial.println(percent + " " + fadeTime + " " + id);
}


///////////////////////////////////////////SETUP////////////
void setup(){
	pinMode(LEDSTRIP, OUTPUT);
	pinMode(ZEROCROSS, INPUT);
	pinMode(MOTION, INPUT);
	pinMode(MOTOR, OUTPUT);
	pinMode(HVDIM, INPUT);
	pinMode(SWITCH, INPUT);
  Serial.begin(9600);

  //	Spark.function("fade", fade);
	Spark.variable("motorState", &motorState, INT);
	Spark.variable("switchState", &switchState, INT);
	Spark.variable("motionState", &motionState, INT);
	Spark.variable("dimPercentLight", &dimPercentLight, INT);
	Spark.variable("dimPercentLED", &dimPercentLED, INT);

  //setup
  if (client.connect(timeServer, 80)) {
    Serial.println("connected");
    client.println("GET utc/now?\H:\M:\S");
    client.println();
  }  else {
    Serial.println("connection failed");
  }
}

/////////////////////////////////LOOP//////////////////
void loop(){
  fade("percentage,time,ID");
  Serial.println("Boat!");

  if (digitalRead(SWITCH) == HIGH) {
    switchState = true;
  } else if (digitalRead(SWITCH) == LOW) {
    switchState = false;
  } else if (digitalRead(MOTION) == HIGH) {
    motionState = true;
  } else if (digitalRead(MOTION) == LOW) {
    motionState = false;
  } else if (digitalRead(ZEROCROSS) == HIGH) {
    zeroCrossState = true;
  } else if (digitalRead(ZEROCROSS) == LOW) {
    zeroCrossState = false;
  }
}





//loop
if (client.available()) {
  char c = client.read();
  Serial.print(c);
}

if (!client.connected()) {
  Serial.println();
  Serial.println("disconnecting.");
  client.stop();
}








